---
title: "Fertility"
format: html
---

```{r}
#| label: setup
library (tidyverse)
library(mosaic) # Our all-in-one package
library(skimr) # Looking at data
library(visdat) # Mapping missing data
library(naniar) # Missing data visualization and munging
library(janitor) # Clean the data
library(tinytable) # Printing Tables for our data
library(ggformula)
library(dplyr)
library(crosstable)
library(igraph)
```

```{r}
Fertility <- readr::read_delim("~/R Studio/Swetha_Stat/Swetha_Blog/posts/Data/Fertility.csv")
Fertility %>% 

janitor::clean_names(case = "snake")
```

```{r}
base::names(Fertility)
dplyr::glimpse(Fertility)
base::dim(Fertility)
utils::str(Fertility)
```

```{r}
Fertility_sample <- Fertility %>% dplyr::slice_sample(n = 100000) 
visdat::vis_dat(Fertility_sample)
```

```{r}
Fertility_samplemodified <- Fertility_sample %>% tidyr::drop_na()
```

```{r}
Fertility_samplemodified
```
```{r}
Fertility <- Fertility %>%
  mutate(
    morekids = as.factor(morekids),
    gender1 = as.factor(gender1),
    gender2 = as.factor(gender2),
    afam = as.factor(afam),
    hispanic = as.factor(hispanic),
    other = as.factor(other),
  ) %>%
  dplyr::relocate(where(is.factor), .after = rownames)

glimpse(Fertility)

```
```{r}
Fertility_samplemodified %>% tt ()
```

```{r}
## Counting by the obvious factor variables
Fertility_samplemodified %>%
  dplyr::count(gender1) %>%
  tt()
```

```{r}
## Counting by the gender factor variables
Fertility %>%
  dplyr::count(across(.cols = c (gender1 , gender2)))
```


```{r}
Fertility %>%
  count(across(where(is.factor))) %>%
  tally()
```

```{r}
# Single Variable, Single Summary
## if any na's out there it'll give as na
Fertility_samplemodified %>%
  dplyr::summarise(mean_age = mean(age, na.rm = T))
```


```{r}
Fertility_samplemodified %>% filter(hispanic == "yes"| afam == "yes")
```
```{r}
## and then group by two things
Fertility %>%
  group_by(morekids, age) %>%
  summarise(
    mean_morekids = mean(morekids),
    average_age = mean(age),
    count = n()
  )
```

```{r}
# library(crosstable)
crosstable(morekids ~ gender2 + gender1,
  data = Fertility
) %>%
  crosstable::as_flextable()
```
```
```{r}
Fertility %>%
  group_by(gender1, gender2, morekids) %>%
  summarise(mean_age = mean(age), count=n())

## The difference in mean age between "yes" and "no" groups is small (about 0.7 years), but consistent for both genders.
## People who answered "yes" to more kids are slightly older, on average, than those who answered "no," for both males and females.
## which means when these ppl get older they might get more kids?
```

```{r}
crosstable(hispanic + afam + other ~ gender2 + gender1 + more,
  data = Fertility
) %>%
  crosstable::as_flextable()
## 
```
```{r}
Fertility%>% 
  count(gender1,gender2, morekids) %>% 
  ggplot(aes(x=gender1, gender2, y=n, fill=morekids)) + 
  geom_bar(stat="identity", position="dodge")

```

```{r}
Fertility %>%
  ggplot(aes(x=age)) +
  geom_histogram(bins = 30)
```
```{r}
Fertility %>%
  group_by(morekids) %>%
  summarise(mean_work = mean(work), count=n())
```
```{r}
Fertility %>%
  gf_bar(~gender1,
    gender2 = ~morekids,
    position = "dodge"
  ) %>%
  gf_labs(title = "Plot 2A: Dodged Bar Chart")
```

```{r}
library(ggformula)
library(dplyr)

Fertility %>%
  gf_bar(~interaction(gender1, gender2),
         fill = ~morekids,
         position = "stack") %>%
  gf_labs(
    title = "Stacked morekids vs gender",
    subtitle = "Shows how gender combination relates to having more kids",
    x = "Gender Combination",
    y = "Count"
  ) %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))

```

```{r}
# filled bar chart (proportions) without gender_combo
Fertility %>%
  gf_bar(~interaction(gender1, gender2),
         fill = ~morekids,
         position = "fill") %>%
  gf_labs(
    title = "Having morekids vs gender combinations",
    subtitle = "Proportions within each gender combination",
    x = "Gender Combination",
    y = "Proportion"
  ) %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))

```

```{r}
Fertility %>%
  group_by(work, morekids) %>%
  summarise(mean_work = mean(work), count=n())
```
```{r}
crosstable(hispanic + afam + other ~ work + morekids,
  data = Fertility
) %>%
  crosstable::as_flextable()
## 
```
```{r}
gf_histogram(~work,
  data = Fertility,
  bins = 30,                
  fill = ~morekids,         
  position = "dodge"        
) %>%
  gf_labs(
    title = "Work Weeks vs More Kids",
    x = "work weeks",
    y = "Count",
  )
```
```{r}
library(ggformula)
library(dplyr)

Fertility_counts%>% 
  group_by(morekids) %>% 
  summarize(average_workhours = mean(work))%>%tt()

gf_line(count ~ work,
        data = Fertility_counts,
        color = ~ morekids,
        linewidth = 0.7) %>%
  gf_theme(theme_light())

```
```{r}
Fertility %>%
  count(morekids, work) %>% 
  gf_point(n ~ work, color = ~morekids ) %>%
  gf_labs(
    title = "Work Weeks vs More Kids",
    x = "Work weeks in 1979",
    y = "Count"
   )
```
```{r}
Fertility %>%
  count(morekids, work) %>% 
  gf_line(n ~ work, color = ~morekids) %>%
  gf_labs(
    title = "Work Weeks vs More Kids",
    x = "Work weeks in 1979",
    y ="Count"
    )
```
```{r}
library(dplyr)

Fertility <- Fertility %>%
  mutate(group = case_when(
    afam == "no" & hispanic == "no" & other == "no" ~ "White",
    TRUE ~ "Other Minority"
  ))

```

```{r}
Fertility
```
```{r}
Fertility_whiteppl <- Fertility %>%
  filter(afam == "no", hispanic == "no", other == "no")
```

```{r}
Fertility_whiteppl
```
```{r}
Fertility_race <- Fertility %>%
  mutate(group = case_when(
    afam == "yes" ~ "African-American",
    hispanic == "yes" ~ "Hispanic",
    other == "yes" ~ "Other",
    afam == "no" & hispanic == "no" & other == "no" ~ "White"
  ))
```

```{r}
Fertility_race
```
```{r}
crosstable(Fertility_race, morekids ~ group) %>%
  as_flextable()

```

```{r}
base::names(Fertility_race)
dplyr::glimpse(Fertility_race)
base::dim(Fertility_race)
utils::str(Fertility_)
```

```{r}
Fertility_race <- Fertility_race %>%
  mutate(
    morekids = as.factor(morekids),
    gender1 = as.factor(gender1),
    gender2 = as.factor(gender2),
    afam = as.factor(afam),
    hispanic = as.factor(hispanic),
    other = as.factor(other),
    group = as.factor(group)
  ) %>%
  dplyr::relocate(where(is.factor), .after = rownames)

glimpse(Fertility_race)
```

```{r}
Fertility_race %>%
  group_by(group, morekids) %>%
  summarise(
    count = n())
```

```{r}
crosstable(group ~ morekids,
  data = Fertility_race
) %>%
  crosstable::as_flextable() 
```

```{r}
crosstable(morekids ~ group,
  data = Fertility_race
) %>%
  crosstable::as_flextable()
```

```{r}
library(mosaic)  # package for mosaic plots

tally(~ group + morekids, data = Fertility_race) %>%
  plot(type = "mosaic", main = "Mosaic Plot: Ethnicity vs Number of Kids")
```

```{r}
Fertility %>%
  count(morekids, work) %>% 
  gf_boxplot(n ~ work, orientation="y") %>%
  gf_labs(
    title = "Work Weeks vs More Kids",
    x = "Work weeks in 1979",
    y = "Count"
)
```

```{r}
Fertility_counts %>%
  gf_bar(~group,                
         weight = ~n,           
         fill = ~morekids,      
         position = "fill") %>%
  gf_labs(
    title = "More Kids by Ethnicity",
    x = "Race",
    y = "Count"
  ) %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))
```
```{r}
Fertility_counts %>%
  gf_bar(~group,                
         weight = ~n,           
         fill = ~morekids,      
         position = "stack") %>%
  gf_labs(
    title = "More Kids by Ethnicity",
    x = "Race",
    y = "Count"
  ) %>%
  gf_refine(scale_fill_brewer(palette = "Set1"))
```
```{r}
library(mosaic)

gf_boxplot(work ~ age, data = Fertility,
           fill = "pink", orientation = "y") %>%
  gf_labs(
    x = "More Kids",
    y = "age",
    title = "Boxplot of Work Weeks by More Kids"
  )

```
```{r}
Fertility %>%
  mutate(age_group = cut(age, breaks = c(20,30,40,50,60), right = FALSE)) %>%
  gf_boxplot(work ~ morekids | age_group, fill = "pink", orientation = "y") %>%
  gf_labs(
    x = "More Kids",
    y = "Work Weeks",
    title = "Work Weeks by More Kids and Age Group"
  )

```

```{r}
library(mosaic)

gf_density(~morekids | age,          # facet by ethnicity
           data = Fertility, 
           colour = ~morekids) %>%  # separate lines for Yes/No
  gf_labs(
    x = "age",
    y = "Density",
    title = "Age morekids density"
  )
```
```{r}
library(mosaic)

gf_density( ~age, morekids,          
           data = Fertility, 
           colour = ~morekids) %>%  
  gf_labs(
    x = "age",
    y = "Density",
    title = "Age morekids density"
  )
```
```{r}
Fertility_race %>%
  count(morekids) %>%
  gf_bar(~morekids | group , weight = ~n, fill = ~morekids, width = 1) %>%
  gf_refine(coord_polar(theta = "x")) %>%
  gf_labs(title = "More Kids (Yes/No)")

```
```{r}
Fertility %>%
  gf_density(~age, color = ~morekids, fill = ~morekids) %>%
  gf_labs(
    title = "Age Distribution by 'More Kids' Response",
    x = "Age",
    y = "Density",
    color = "More Kids",
    fill ="More Kids"
)
```

```{r}
Fertility %>% 
  gf_boxplot(morekids ~ age, orientation = "y", fill = ~morekids, color = "black") %>%
  gf_labs(y = "Morekids", x = "Age", title = "Morekids vs Age")
```

```{r}
Fertility %>% 
  gf_boxplot(morekids ~ work, orientation = "y", fill = "lightblue" , color = "black") %>%
  gf_labs(y = "Morekids", x = "work", title = "Morekids vs ")
```


